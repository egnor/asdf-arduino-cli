#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

case "$(uname -sm)" in
	"Linux i686") ext="Linux_32bit.tar.gz" ;;
	"Linux x86_64") ext="Linux_64bit.tar.gz" ;;
	"Linux armv6l") ext="Linux_ARMv6.tar.gz" ;;
	"Linux armv7l") ext="Linux_ARMv7.tar.gz" ;;
	"Linux aarch64") ext="Linux_ARM64.tar.gz" ;;
	"Darwin x86_64") ext="macOS_64bit.tar.gz" ;;
	"Darwin arm64") ext="macOS_ARM64.tar.gz" ;;
	"MINGW32_NT-6.2 i686") ext="Windows_32bit.zip" ;;
	"MINGW64_NT-6.2 x86_64") ext="Windows_64bit.zip" ;;
	"WSL2 i686") ext="Windows_32bit.zip" ;;
	"WSL2 x86_64") ext="Windows_64bit.zip" ;;
	*) fail "asdf-$TOOL_NAME does not support arch '$(uname -sm)'." ;;
esac

release_file="$ASDF_DOWNLOAD_PATH/${TOOL_NAME}_${ASDF_INSTALL_VERSION}_${ext}"

# Download tar.gz file to the download directory
url="$GH_REPO/releases/download/v$ASDF_INSTALL_VERSION/$release_file"
echo "* Downloading ${release_file}..."
curl "${curl_opts[@]}" -o "$release_file" -C - "$url" ||
	fail "Could not download $url"

# Extract contents of release file into the download directory
case "$release_file" in
	*.zip) unzip -d "$ASDF_DOWNLOAD_PATH" "$release_file" || fail "Could not extract $release_file" ;;
	*.tar.gz) tar -xzf "$release_file" -C "$ASDF_DOWNLOAD_PATH" --strip-components=1 || fail "Could not extract $release_file" ;;
	*) fail "Unknown file extension for $release_file" ;;
esac

# Remove the release file since we don't need to keep it
rm "$release_file"
